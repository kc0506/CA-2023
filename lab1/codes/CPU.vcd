$date
	Tue Apr 25 21:22:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var integer 32 # counter [31:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % outfile [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 32 & instr [31:0] $end
$var wire 1 " rst_i $end
$var wire 32 ' pc_o [31:0] $end
$var wire 32 ( pc [31:0] $end
$var wire 32 ) instr_out [31:0] $end
$var wire 32 * imme [31:0] $end
$var wire 32 + data2 [31:0] $end
$var wire 32 , data1 [31:0] $end
$var wire 1 - RegWrite $end
$var wire 32 . MUXres [31:0] $end
$var wire 32 / ALUres [31:0] $end
$var wire 3 0 ALUctl [2:0] $end
$var wire 1 1 ALUSrc $end
$var wire 2 2 ALUOp [1:0] $end
$var reg 32 3 instr_addr [31:0] $end
$scope module ALU $end
$var wire 32 4 op2 [31:0] $end
$var wire 32 5 op1 [31:0] $end
$var wire 3 6 ctl [2:0] $end
$var reg 32 7 res [31:0] $end
$var reg 32 8 tmp [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 3 9 funct3 [2:0] $end
$var wire 7 : funct7 [6:0] $end
$var wire 2 ; ALUOp [1:0] $end
$var reg 3 < ALUctl [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 = a [31:0] $end
$var wire 32 > b [31:0] $end
$var wire 32 ? c [31:0] $end
$upscope $end
$scope module Control $end
$var wire 1 @ I_type $end
$var wire 1 A R_type $end
$var wire 7 B opcode [6:0] $end
$var reg 2 C ALUOp [1:0] $end
$var reg 1 1 ALUSrc $end
$var reg 1 - RegWrite $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 D addr_i [31:0] $end
$var wire 32 E instr_o [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 1 swt $end
$var wire 32 F in1 [31:0] $end
$var wire 32 G in0 [31:0] $end
$var reg 32 H res [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 I pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 J pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 K RDaddr_i [4:0] $end
$var wire 32 L RDdata_i [31:0] $end
$var wire 5 M RS1addr_i [4:0] $end
$var wire 32 N RS1data_o [31:0] $end
$var wire 5 O RS2addr_i [4:0] $end
$var wire 32 P RS2data_o [31:0] $end
$var wire 1 - RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var integer 32 Q i [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 12 R in [11:0] $end
$var wire 32 S out [31:0] $end
$var wire 20 T ext [19:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
1A
1@
bx ?
b100 >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
b11 %
b100000000 $
b0 #
1"
0!
$end
#6
b0 '
b0 J
b100000 Q
0"
#8
b1010 /
b1010 7
b1010 L
b11 0
b11 6
b11 <
1-
11
b10 2
b10 ;
b10 C
b1010 .
b1010 4
b1010 H
b0 T
b0 ,
b0 5
b0 N
b0 M
b0 +
b0 G
b0 P
b1010 O
b101 K
b10011 B
b1010 *
b1010 F
b1010 S
b1010 R
b0 :
b0 9
b101000000000001010010011 &
b101000000000001010010011 )
b101000000000001010010011 E
b100 (
b100 ?
b100 I
b0 3
b0 =
b0 D
#12
1"
#25
b100 '
b100 J
b1 #
1!
#27
b1101 /
b1101 7
b1101 L
b1101 .
b1101 4
b1101 H
b1101 O
b110 K
b1101 *
b1101 F
b1101 S
b1101 R
b110100000000001100010011 &
b110100000000001100010011 )
b110100000000001100010011 E
b1000 (
b1000 ?
b1000 I
b100 3
b100 =
b100 D
#50
0!
#75
b1000 '
b1000 J
b10 #
1!
#77
b101 0
b101 6
b101 <
b10000010 /
b10000010 7
b10000010 L
01
b11 2
b11 ;
b11 C
b1101 .
b1101 4
b1101 H
b1010 ,
b1010 5
b1010 N
b101 M
b1101 +
b1101 G
b1101 P
b110 O
b111 K
b110011 B
b100110 *
b100110 F
b100110 S
b100110 R
b1 :
b10011000101000001110110011 &
b10011000101000001110110011 )
b10011000101000001110110011 E
b1100 (
b1100 ?
b1100 I
b1000 3
b1000 =
b1000 D
#100
0!
#125
b1100 '
b1100 J
b11 #
1!
#127
b10101001 /
b10101001 7
b10101001 L
b1101 ,
b1101 5
b1101 N
b110 M
b11100 K
b10011000110000111000110011 &
b10011000110000111000110011 )
b10011000110000111000110011 E
b10000 (
b10000 ?
b10000 I
b1100 3
b1100 =
b1100 D
#150
0!
#175
b10000 '
b10000 J
b100 #
1!
#177
b11 0
b11 6
b11 <
b1100 /
b1100 7
b1100 L
11
b10 2
b10 ;
b10 C
b11111111111111111111111111111111 .
b11111111111111111111111111111111 4
b11111111111111111111111111111111 H
b11111111111111111111 T
b0 +
b0 G
b0 P
b11111 O
b110 K
b10011 B
b11111111111111111111111111111111 *
b11111111111111111111111111111111 F
b11111111111111111111111111111111 S
b111111111111 R
b1111111 :
b11111111111100110000001100010011 &
b11111111111100110000001100010011 )
b11111111111100110000001100010011 E
b10100 (
b10100 ?
b10100 I
b10000 3
b10000 =
b10000 D
#200
0!
#225
b1011 /
b1011 7
b1011 L
b1100 ,
b1100 5
b1100 N
b10100 '
b10100 J
b101 #
1!
#227
b11111 /
b11111 7
b11111 L
b11111 .
b11111 4
b11111 H
b0 T
b0 ,
b0 5
b0 N
b0 M
b11110 K
b11111 *
b11111 F
b11111 S
b11111 R
b0 :
b1111100000000111100010011 &
b1111100000000111100010011 )
b1111100000000111100010011 E
b11000 (
b11000 ?
b11000 I
b10100 3
b10100 =
b10100 D
#250
0!
#275
b11000 '
b11000 J
b110 #
1!
#277
b0 0
b0 6
b0 <
b0 /
b0 7
b0 L
01
b11 2
b11 ;
b11 C
b10000010 .
b10000010 4
b10000010 H
b1100 ,
b1100 5
b1100 N
b110 M
b10000010 +
b10000010 G
b10000010 P
b111 O
b11100 K
b110011 B
b111 *
b111 F
b111 S
b111 R
b111 9
b11100110111111000110011 &
b11100110111111000110011 )
b11100110111111000110011 E
b11100 (
b11100 ?
b11100 I
b11000 3
b11000 =
b11000 D
#300
0!
#325
b11100 '
b11100 J
b111 #
1!
#327
b10000010 /
b10000010 7
b10000010 L
b1 0
b1 6
b1 <
b0 ,
b0 5
b0 N
b11100 M
b11101 K
b100 9
b11111100100111010110011 &
b11111100100111010110011 )
b11111100100111010110011 E
b100000 (
b100000 ?
b100000 I
b11100 3
b11100 =
b11100 D
#350
0!
#375
b100000 '
b100000 J
b1000 #
1!
#377
b0 /
b0 7
b0 L
b0 .
b0 4
b0 H
b1010 M
b0 +
b0 G
b0 P
b1101 O
b1110 K
b1101 *
b1101 F
b1101 S
b1101 R
b110101010100011100110011 &
b110101010100011100110011 )
b110101010100011100110011 E
b100100 (
b100100 ?
b100100 I
b100000 3
b100000 =
b100000 D
#400
0!
#425
b100100 '
b100100 J
b1001 #
1!
#427
b11111111111111111111111101111110 /
b11111111111111111111111101111110 7
b11111111111111111111111101111110 L
b10000010 .
b10000010 4
b10000010 H
b100 0
b100 6
b100 <
b11100 M
b10000010 +
b10000010 G
b10000010 P
b111 O
b101 K
b10000000111 *
b10000000111 F
b10000000111 S
b10000000111 R
b100000 :
b0 9
b1000000011111100000001010110011 &
b1000000011111100000001010110011 )
b1000000011111100000001010110011 E
b101000 (
b101000 ?
b101000 I
b100100 3
b100100 =
b100100 D
#450
0!
#475
b101000 '
b101000 J
b1010 #
1!
#477
b11 0
b11 6
b11 <
b11111111111111111111111111111000 /
b11111111111111111111111111111000 7
b11111111111111111111111111111000 L
11
b10 2
b10 ;
b10 C
b11111111111111111111111111111000 .
b11111111111111111111111111111000 4
b11111111111111111111111111111000 H
b11111111111111111111 T
b11111 M
b0 +
b0 G
b0 P
b11000 O
b11111 K
b10011 B
b11111111111111111111111111111000 *
b11111111111111111111111111111000 F
b11111111111111111111111111111000 S
b111111111000 R
b1111111 :
b11111111100011111000111110010011 &
b11111111100011111000111110010011 )
b11111111100011111000111110010011 E
b101100 (
b101100 ?
b101100 I
b101000 3
b101000 =
b101000 D
#500
0!
#525
b11111111111111111111111111110000 /
b11111111111111111111111111110000 7
b11111111111111111111111111110000 L
b11111111111111111111111111111000 ,
b11111111111111111111111111111000 5
b11111111111111111111111111111000 N
b101100 '
b101100 J
b1011 #
1!
#527
b110000 (
b110000 ?
b110000 I
b101100 3
b101100 =
b101100 D
#550
0!
#575
b11111111111111111111111111101000 /
b11111111111111111111111111101000 7
b11111111111111111111111111101000 L
b110000 '
b110000 J
b11111111111111111111111111110000 ,
b11111111111111111111111111110000 5
b11111111111111111111111111110000 N
b1100 #
1!
#577
b110100 (
b110100 ?
b110100 I
b110000 3
b110000 =
b110000 D
#600
0!
#625
b11111111111111111111111111100000 /
b11111111111111111111111111100000 7
b11111111111111111111111111100000 L
b11111111111111111111111111101000 ,
b11111111111111111111111111101000 5
b11111111111111111111111111101000 N
b110100 '
b110100 J
b1101 #
1!
#627
b111111 /
b111111 7
b111111 L
b111111 .
b111111 4
b111111 H
b0 T
b0 ,
b0 5
b0 N
b0 M
b11111111111111111111111111101000 +
b11111111111111111111111111101000 G
b11111111111111111111111111101000 P
b11111 O
b111 K
b111111 *
b111111 F
b111111 S
b111111 R
b1 :
b11111100000000001110010011 &
b11111100000000001110010011 )
b11111100000000001110010011 E
b111000 (
b111000 ?
b111000 I
b110100 3
b110100 =
b110100 D
#650
0!
#675
b111000 '
b111000 J
b1110 #
1!
#677
b10 8
b1111 /
b1111 7
b1111 L
b10000000010 .
b10000000010 4
b10000000010 H
b110 0
b110 6
b110 <
b111111 ,
b111111 5
b111111 N
b111 M
b0 +
b0 G
b0 P
b10 O
b10000000010 *
b10000000010 F
b10000000010 S
b10000000010 R
b100000 :
b101 9
b1000000001000111101001110010011 &
b1000000001000111101001110010011 )
b1000000001000111101001110010011 E
b111100 (
b111100 ?
b111100 I
b111000 3
b111000 =
b111000 D
#700
0!
#725
b11 /
b11 7
b11 L
b1111 ,
b1111 5
b1111 N
b111100 '
b111100 J
b1111 #
1!
#727
b1000000 (
b1000000 ?
b1000000 I
b111100 3
b111100 =
b111100 D
#750
0!
#775
b0 /
b0 7
b0 L
b1000000 '
b1000000 J
b11 ,
b11 5
b11 N
b10000 #
1!
#777
b1000100 (
b1000100 ?
b1000100 I
b1000000 3
b1000000 =
b1000000 D
#800
0!
#825
b0 ,
b0 5
b0 N
b1000100 '
b1000100 J
b10001 #
1!
#827
b1 8
b10000000001 .
b10000000001 4
b10000000001 H
b110 /
b110 7
b110 L
b1100 ,
b1100 5
b1100 N
b110 M
b1 O
b110 K
b10000000001 *
b10000000001 F
b10000000001 S
b10000000001 R
b1000000000100110101001100010011 &
b1000000000100110101001100010011 )
b1000000000100110101001100010011 E
b1001000 (
b1001000 ?
b1001000 I
b1000100 3
b1000100 =
b1000100 D
#850
0!
#875
b11 /
b11 7
b11 L
b1001000 '
b1001000 J
b110 ,
b110 5
b110 N
b10010 #
1!
#877
b1001100 (
b1001100 ?
b1001100 I
b1001000 3
b1001000 =
b1001000 D
#900
0!
#925
b1 /
b1 7
b1 L
b11 ,
b11 5
b11 N
b1001100 '
b1001100 J
b10011 #
1!
#927
b1010000 (
b1010000 ?
b1010000 I
b1001100 3
b1001100 =
b1001100 D
#950
0!
#975
b0 /
b0 7
b0 L
b1010000 '
b1010000 J
b1 ,
b1 5
b1 N
b10100 #
1!
#977
b10 0
b10 6
b10 <
b110 8
01
b11 2
b11 ;
b11 C
b1 .
b1 4
b1 H
b11111111111111111111111111010000 /
b11111111111111111111111111010000 7
b11111111111111111111111111010000 L
b11111111111111111111111111101000 ,
b11111111111111111111111111101000 5
b11111111111111111111111111101000 N
b11111 M
b1 +
b1 G
b1 P
b110 O
b11111 K
b110011 B
b110 *
b110 F
b110 S
b110 R
b0 :
b1 9
b11011111001111110110011 &
b11011111001111110110011 )
b11011111001111110110011 E
b1010100 (
b1010100 ?
b1010100 I
b1010000 3
b1010000 =
b1010000 D
#1000
0!
#1025
b11111111111111111111111110100000 /
b11111111111111111111111110100000 7
b11111111111111111111111110100000 L
b11111111111111111111111111010000 ,
b11111111111111111111111111010000 5
b11111111111111111111111111010000 N
b1010100 '
b1010100 J
b10101 #
1!
#1027
b1011000 (
b1011000 ?
b1011000 I
b1010100 3
b1010100 =
b1010100 D
#1050
0!
#1075
b11111111111111111111111101000000 /
b11111111111111111111111101000000 7
b11111111111111111111111101000000 L
b1011000 '
b1011000 J
b11111111111111111111111110100000 ,
b11111111111111111111111110100000 5
b11111111111111111111111110100000 N
b10110 #
1!
#1077
b0 /
b0 7
b0 L
0-
b0 2
b0 ;
b0 C
b0 .
b0 4
b0 H
b11 0
b11 6
b11 <
b0 ,
b0 5
b0 N
b0 M
b0 +
b0 G
b0 P
b0 O
b0 K
b0 B
b0 *
b0 F
b0 S
b0 R
b0 9
b0 &
b0 )
b0 E
b1011100 (
b1011100 ?
b1011100 I
b1011000 3
b1011000 =
b1011000 D
#1100
0!
#1125
b1011100 '
b1011100 J
b10111 #
1!
#1127
b1100000 (
b1100000 ?
b1100000 I
b1011100 3
b1011100 =
b1011100 D
#1150
0!
#1175
b1100000 '
b1100000 J
b11000 #
1!
#1177
b1100100 (
b1100100 ?
b1100100 I
b1100000 3
b1100000 =
b1100000 D
#1200
0!
#1225
b1100100 '
b1100100 J
b11001 #
1!
#1227
b1101000 (
b1101000 ?
b1101000 I
b1100100 3
b1100100 =
b1100100 D
#1250
0!
#1275
b1101000 '
b1101000 J
b11010 #
1!
#1277
b1101100 (
b1101100 ?
b1101100 I
b1101000 3
b1101000 =
b1101000 D
#1300
0!
#1325
b1101100 '
b1101100 J
b11011 #
1!
#1327
b1110000 (
b1110000 ?
b1110000 I
b1101100 3
b1101100 =
b1101100 D
#1350
0!
#1375
b1110000 '
b1110000 J
b11100 #
1!
#1377
b1110100 (
b1110100 ?
b1110100 I
b1110000 3
b1110000 =
b1110000 D
#1400
0!
#1425
b1110100 '
b1110100 J
b11101 #
1!
#1427
b1111000 (
b1111000 ?
b1111000 I
b1110100 3
b1110100 =
b1110100 D
#1450
0!
#1475
b1111000 '
b1111000 J
b11110 #
1!
#1477
b1111100 (
b1111100 ?
b1111100 I
b1111000 3
b1111000 =
b1111000 D
#1500
0!
#1525
b1111100 '
b1111100 J
1!
